{"ast":null,"code":"var _jsxFileName = \"/Users/austinjames/Desktop/project_3/src/pages/RegisterPage.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  async function register(ev) {\n    ev.preventDefault();\n    const response = await fetch('http://localhost:4000/register', {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (response.status === 200) {\n      alert(\"success\");\n    } else {\n      alert('fail'); //fail if inputs are not unique\n    }\n  }\n  //input form for registering \n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      value: username,\n      onChange: ev => setUsername(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: ev => setPassword(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","register","ev","preventDefault","response","fetch","method","body","JSON","stringify","headers","status","alert","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/austinjames/Desktop/project_3/src/pages/RegisterPage.js"],"sourcesContent":["import { useState } from \"react\"\n\nexport default function RegisterPage (){\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    \n    async function register(ev) {\n      ev.preventDefault() \n       const response = await fetch('http://localhost:4000/register', {\n            method: 'POST',\n            body: JSON.stringify({username,password}),\n            headers: {'Content-Type' :'application/json'}\n        })\n        if (response.status === 200) { \n            alert(\"success\")\n        } else{\n            alert('fail') //fail if inputs are not unique\n        }\n     }\n     //input form for registering \n    return (\n    <form className=\"register\" onSubmit={register}> \n        <h1>Register</h1>\n        <input type='text' \n               placeholder='username' \n               value={username} \n               onChange= {ev => setUsername(ev.target.value)}/>\n        <input type='password' \n        placeholder='password'\n        value={password}\n        onChange= {ev => setPassword(ev.target.value)}/>\n        <button>Register</button>\n    </form>\n    )\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeS,QAAQA,CAACC,EAAE,EAAE;IAC1BA,EAAE,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACZ,QAAQ;QAACE;MAAQ,CAAC,CAAC;MACzCW,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB;IAChD,CAAC,CAAC;IACF,IAAIN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MACzBC,KAAK,CAAC,SAAS,CAAC;IACpB,CAAC,MAAK;MACFA,KAAK,CAAC,MAAM,CAAC,EAAC;IAClB;EACH;EACA;EACD,oBACAlB,OAAA;IAAMmB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAEb,QAAS;IAAAc,QAAA,gBAC1CrB,OAAA;MAAAqB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGrB,EAAE,IAAIJ,WAAW,CAACI,EAAE,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvDzB,OAAA;MAAO0B,IAAI,EAAC,UAAU;MACtBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGrB,EAAE,IAAIF,WAAW,CAACE,EAAE,CAACsB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChDzB,OAAA;MAAAqB,QAAA,EAAQ;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEX;AAACvB,EAAA,CAhCuBD,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}